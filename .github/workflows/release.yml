name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version bump type'
        required: true
        default: 'alpha'
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
          - alpha
          - beta

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm run test

      - name: Build packages
        run: pnpm run build

      - name: Configure git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Version bump
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" = "alpha" ]; then
            NEW_VERSION=$(pnpm version prerelease --preid=alpha --no-git-tag-version)
          elif [ "${{ github.event.inputs.version }}" = "beta" ]; then
            NEW_VERSION=$(pnpm version prerelease --preid=beta --no-git-tag-version)
          else
            NEW_VERSION=$(pnpm version ${{ github.event.inputs.version }} --no-git-tag-version)
          fi

          # Update package versions
          cd packages/di
          pnpm version $NEW_VERSION --no-git-tag-version
          cd ../cli
          pnpm version $NEW_VERSION --no-git-tag-version
          cd ../../apps/example
          pnpm version $NEW_VERSION --no-git-tag-version
          cd ../docs
          pnpm version $NEW_VERSION --no-git-tag-version

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Commit version bump
        run: |
          git add .
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}"
          git tag ${{ steps.version.outputs.version }}
          git push origin main
          git push origin ${{ steps.version.outputs.version }}
