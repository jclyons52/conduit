// Auto-generated by Conduit Compiler
// Entry point: userService
// Generated on: 2025-09-23T12:30:46.899Z

// Import your service classes here
// Example: import { ConsoleLogger, PostgresDatabase } from './services';
import { UserServiceImpl } from './services/user-service';
import { DatabaseUserRepository } from './services/user-repository';
import { PostgresDatabase } from './services/database';
import { ConsoleLogger } from './services/logger';
import { SMTPEmailService } from './services/email';
import { createContainer, ServiceDefinitions, singleton, scoped } from 'conduit';

export interface ExternalParams {
  postgresql_user_password_localhost_5432_myapp: string;
  smtp_api_key_12345: string;
  noreply_myapp_com: string;
}

export function createUserService(params: ExternalParams) {
  const serviceDefinitions: ServiceDefinitions<{
    database: any;
    logger: any;
    userRepository: any;
    emailService: any;
    userService: any;
  }> = {
  database: scoped(() => new PostgresDatabase(params.postgresql_user_password_localhost_5432_myapp)),
  logger: scoped(() => new ConsoleLogger('[APP]')),
  userRepository: scoped(container => new DatabaseUserRepository(container.get('database'), container.get('logger'))),
  emailService: scoped(() => new SMTPEmailService(params.smtp_api_key_12345, params.noreply_myapp_com)),
  userService: scoped(container => new UserServiceImpl(container.get('userRepository'), container.get('emailService'), container.get('logger'))),
  };

  const container = createContainer(serviceDefinitions);
  return container.get('userService');
}